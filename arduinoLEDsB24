// --- Button pins ---
const int buttonPins[4] = {5, 6, 7, 8};   // 4 buttons on pins 5–8
// --- LED pins ---
const int ledPins[4] = {10, 11, 12, 13};  // 4 LEDs on pins 10–13

// --- State tracking ---
bool lastState[4] = {LOW, LOW, LOW, LOW};
unsigned long pressStart[4] = {0, 0, 0, 0};
bool ledActive[4] = {false, false, false, false};

void setup() {
  Serial.begin(9600);  

  for (int i = 0; i < 4; i++) {
    pinMode(buttonPins[i], INPUT);
    pinMode(ledPins[i], OUTPUT);
    digitalWrite(ledPins[i], LOW);
  }
}

void loop() {
  // --- 1. Check for serial commands from Python ---
  if (Serial.available() > 0) {
    String command = Serial.readStringUntil('\n');  // Read command
    command.trim();

    if (command.startsWith("LED_")) {
      int ledIndex = command.charAt(4) - '1';  // Convert "LED_1" → index 0
      if (ledIndex >= 0 && ledIndex < 4) {
        if (command.endsWith("_ON")) {
          digitalWrite(ledPins[ledIndex], HIGH);
          ledActive[ledIndex] = true;
          Serial.print("LED ");
          Serial.print(ledIndex + 1);
          Serial.println(" turned ON");
        } else if (command.endsWith("_OFF")) {
          digitalWrite(ledPins[ledIndex], LOW);
          ledActive[ledIndex] = false;
          Serial.print("LED ");
          Serial.print(ledIndex + 1);
          Serial.println(" turned OFF");
        }
      }
    }
  }

  // --- 2. Check button states ---
  for (int i = 0; i < 4; i++) {
    bool current = digitalRead(buttonPins[i]);

    // Button pressed
    if (current == HIGH && lastState[i] == LOW) {
      pressStart[i] = millis();
      Serial.print("button_");
      Serial.print(i + 1);
      Serial.print("_pressed ");
      Serial.println(pressStart[i]);
      lastState[i] = HIGH;

      // Turn off LED immediately when pressed
      if (ledActive[i]) {
        digitalWrite(ledPins[i], LOW);
        ledActive[i] = false;
      }
    }

    // Button released
    else if (current == LOW && lastState[i] == HIGH) {
      unsigned long pressEnd = millis();
      Serial.print("button_");
      Serial.print(i + 1);
      Serial.print("_released ");
      Serial.println(pressEnd);
      lastState[i] = LOW;
    }
  }

  delay(5);  // Simple debounce
}
